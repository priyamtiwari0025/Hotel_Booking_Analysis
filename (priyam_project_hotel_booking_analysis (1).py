# -*- coding: utf-8 -*-
"""(Priyam_Project_Hotel_Booking_Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sdYln-CyWLj5xjdLBSrWTUTxlJHjtOB2

# **Project Name**    - Hotel Booking Analysis

##### **Project Type**    - EDA
##### **Contribution**    - Individual
##### **Student Name -** Priyam

# **Project Summary -**

* In this project we began to explore the dataset in which Hotel Booking comprises of two types of hotels i.e City Hotel and Resort Hotel.

*   In this dataset, there are 119390 rows and 32 columns.

*   All the columns are divided into three dtypes : Object, float64 and int64.

*   In this dataset, there are both duplicates and missing values available. So, we have to deal with that and as a result i have replaced the null and missing values and also i dropped the duplicate values.

*   The maximum number of missing values are from 'Company' column then followed by 'Agent','Country' and 'Children' columns. The 'Children' column consists of only 4 null values while 'Company' column consists of 112593 null values.

*   In this project, i divided the data manipulation workflow into three categories i.e. Data Collection, Data cleaning & manipulation and EDA(Exploratory Data Analysis).

*   In moving further, i have used various basic functions and attributes i.e Data collections first step to find different columns which is done by various methods like Head(), tail(), info(), describe(), columns() and some others method used for data collections.

*   As i further moved, i check the number of unique values of each columns and generate a list of those values and then also find the unique values of each columns later on.

*   Then further i converted the datatypes of columns into appropriate datatype. I added some of the columns name here, one is 'total_people' and other is 'total_stay'.

*   Find some columns are not in accurate data types which correct it later, done in Data cleaning part and as well as duplicates data items must be removed as i find duplicate items equal to 31994 which is dropped from dataset later.

*   I found that there were some rows in which the combining values of adults, babies and childrens was 0, so this simply means there were no guests as 0 indicates presence of none. So, there were no bookings made. As a result, i simply dropped the rows where combining values of adults, babies and children columns was 0.

*   The data type of 'reservation_status_date' column was object type, so it was changed to date type format for better use.

*   Before visualizing any data from the data set we have to do data wrangling. For that, i have checked the null value of all the columns. After checking, when i find minimal number of null values, filling these null values with necessary values as per requirement by using fillna().

*   So, after completing the process of data wrangling, i moved to the data visualization part.

*   In the data visualization process, i have used various charts and have dived deep understanding the graphs to catch the proper insights from the data. That gives the business outcomes which will ultimately boost the businesses.

*   So, i explored and analyzed the data to discover important factors that govern the bookings.

# **Problem Statement**

Have you ever wondered when the best time of year to book a hotel room is? Or the optimal length of stay in order to get the best daily rate? What if you wanted to predict whether or not a hotel was likely to receive a disproportionately high number of special requests? This hotel booking dataset can help you explore those questions! This data set contains booking information for a city hotel and a resort hotel, and includes information such as when the booking was made, length of stay, the number of adults, children, and/or babies, and the number of available parking spaces, among other things. All personally identifying information has been removed from the data. Explore and analyze the data to discover important factors that govern the bookings.

#### **Define Your Business Objective?**

Analyse the data on bookings of City Hotel and Resort Hotel to gain insights on the different factors that affect the booking. This is undertaken as an individual project.

# **General Guidelines** : -

1.   Well-structured, formatted, and commented code is required.
2.   Exception Handling, Production Grade Code & Deployment Ready Code will be a plus. Those students will be awarded some additional credits.
     
     The additional credits will have advantages over other students during Star Student selection.
       
             [ Note: - Deployment Ready Code is defined as, the whole .ipynb notebook should be executable in one go
                       without a single error logged. ]

3.   Each and every logic should have proper comments.
4. You may add as many number of charts you want. Make Sure for each and every chart the following format should be answered.
        

```
# Chart visualization code
```
            

*   Why did you pick the specific chart?
*   What is/are the insight(s) found from the chart?
* Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

5. You have to create at least 20 logical & meaningful charts having important insights.


[ Hints : - Do the Vizualization in  a structured way while following "UBM" Rule.

U - Univariate Analysis,

B - Bivariate Analysis (Numerical - Categorical, Numerical - Numerical, Categorical - Categorical)

M - Multivariate Analysis
 ]

##Github link

# ***Let's Begin !***

## ***1. Know Your Data***

### Import Libraries
"""

# Commented out IPython magic to ensure Python compatibility.
# Import Libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
# %matplotlib inline
from datetime import datetime
import seaborn as sns
import ast

"""### Dataset Loading"""

from google.colab import drive
drive.mount('/content/drive')

# Load Dataset
database = '/content/drive/MyDrive/Colab Notebooks/Hotel Bookings (1).csv'
hotel_booking_df = pd.read_csv(database)

"""### Dataset First View"""

# Dataset First Look
hotel_booking_df

"""### Dataset Rows & Columns count"""

# Dataset Rows & Columns count
print('Number of rows',hotel_booking_df.shape[0])
print('Number of columns',hotel_booking_df.shape[1])

"""### Dataset Information"""

# Dataset Info
hotel_booking_df.info()

"""#### Duplicate Values"""

# Dataset Duplicate Value Count
len(hotel_booking_df[hotel_booking_df.duplicated()])

# Thus, this dataset contains 31994 duplicate values

# Visualizing Duplicate values through Count plot
# Set the plot size
plt.figure(figsize = (8,7))

# Create the figure object
sns.countplot(x=hotel_booking_df.duplicated())

# Set labels
plt.xticks([0,1],["Non Duplicate Values","Duplicate Values"],fontsize = 12)

# To show
plt.show()

"""#### Missing Values/Null Values"""

# Missing Values/Null Values Count
# Checking Missing Values/Null Values Count in individual columns
hotel_booking_df.isnull().sum().sort_values(ascending=False)

# Getting missing Values/Null Values Count in descending order to get a organized output

# Visualizing the missing values
# Set the plot size
plt.figure(figsize = (15,11))

# Create the figure object
sns.heatmap(hotel_booking_df.isnull().corr(), vmin=-1, annot= True)

# Set labels
plt.xlabel('Name of columns', fontsize=15)
plt.ylabel('Name of columns', fontsize=13)
plt.title('Places of missing values in Dataset', fontsize=17)

# To show
plt.show()

"""### What did you know about your dataset?

*   This data set contains a single file which compares various booking information between two hotels: City Hotel and Resort Hotel. Includes information such as when the booking was made, length of stay, the number of adults, children, and/or babies, and the number of available parking spaces, among other things.

*   The dataset contains a total of 119390 rows and 32 columns.

*   All the columns are divided into three dtypes : Object, float64 and int64.

*   This dataset does have duplicated values as well as null values. There are total of 31994 duplicate values and four columns have missing values/ null values.

*   The maximum number of missing values are from 'Company' column then followed by 'Agent', 'Country' and 'Children' columns. The 'Children' column consists of only 4 null values, while 'Company' column consists of 112593 null values.

## ***2. Understanding Your Variables***
"""

# Dataset Columns
hotel_booking_df.columns

# Getting all the columns name of dataset

# Dataset Describe
hotel_booking_df.describe()

# Describe data for insights

"""### Variables Description

1. **hotel :** Name of the hotel (Resort Hotel or City Hotel)

2. **is_canceled :** If the booking was canceled (1) or not (0)

3. **lead_time:** Number of days before the actual arrival of the guests

4. **arrival_date_year :** Year of arrival date

5. **arrival_date_month :** Month of arrival date

6. **arrival_date_week_number :** Week number of year for arrival date

7. **arrival_date_day_of_month :** Day of arrival date

8. **stays_in_weekend_nights :** Number of weekend nights (Saturday or Sunday) spent at the hotel by the guests.

9. **stays_in_week_nights :** Number of weeknights (Monday to Friday) spent at the hotel by the guests.

10. **adults :** Number of adults among guests

11. **children :** Number of children among guests

12. **babies :** Number of babies among guests

13. **meal :** Type of meal booked

14. **country :** Country of guests

15. **market_segment :** Designation of market segment

16. **distribution_channel :** Name of booking distribution channel

17. **is_repeated_guest :** If the booking was from a repeated guest (1) or not (0)

18. **previous_cancellations :** Number of previous bookings that were cancelled by the customer prior to the current booking

19. **previous_bookings_not_canceled :** Number of previous bookings not cancelled by the customer prior to the current booking

20. **reserved_room_type :** Code of room type reserved

21. **assigned_room_type :** Code of room type assigned

22. **booking_changes :** Number of changes/amendments made to the booking

23. **deposit_type :** Type of the deposit made by the guest

24. **agent :** ID of travel agent who made the booking

25. **company :** ID of the company that made the booking

26. **days_in_waiting_list :** Number of days the booking was in the waiting list

27. **customer_type :** Type of customer, assuming one of four categories

28. **adr :** Average Daily Rate, as defined by dividing the sum of all lodging transactions by the total number of staying nights

29. **required_car_parking_spaces :** Number of car parking spaces required by the customer

30. **total_of_special_requests :** Number of special requests made by the customer

31. **reservation_status :** Reservation status (Canceled, Check-Out or No-Show)

32. **reservation_status_date :** Date at which the last reservation status was updated

### Check Unique Values for each variable.
"""

# Check Unique Values for each variable.
# Checking the number of Unique Values for each variable

for elem in hotel_booking_df.columns:
  print('Number of unique values in',elem,'column is',hotel_booking_df[elem].nunique())

# Using for-loop for each variable of Dataset

# Checking Unique Values in categorical columns one by one
# Checking Unique Values in Hotel column
hotel_booking_df['hotel'].unique()

# Checking Unique Values in is_canceled column
hotel_booking_df['is_canceled'].unique()

# Checking Unique Values in lead_time column
hotel_booking_df['lead_time'].unique()

# Checking Unique Values in arrival_date_year column
hotel_booking_df['arrival_date_year'].unique()

# Checking Unique Values in arrival_date_month column
hotel_booking_df['arrival_date_month'].unique()

# Checking Unique Values in arrival_date_week_number column
hotel_booking_df['arrival_date_week_number'].unique()

# Checking Unique Values in arrival_date_day_of_month column
hotel_booking_df['arrival_date_day_of_month'].unique()

# Checking Unique Values in stays_in_weekend_nights column
hotel_booking_df['stays_in_weekend_nights'].unique()

# Checking Unique Values in stays_in_week_nights column
hotel_booking_df['stays_in_week_nights'].unique()

# Checking Unique Values in adults column
hotel_booking_df['adults'].unique()

# Checking Unique Values in children column
hotel_booking_df['children'].unique()

# Checking Unique Values in babies column
hotel_booking_df['babies'].unique()

# Checking Unique Values in meal column
hotel_booking_df['meal'].unique()

# Checking Unique Values in country column
hotel_booking_df['country'].unique()

# Checking Unique Values in market_segment column
hotel_booking_df['market_segment'].unique()

# Checking Unique Values in distribution_channel column
hotel_booking_df['distribution_channel'].unique()

# Checking Unique Values in is_repeated_guest column
hotel_booking_df['is_repeated_guest'].unique()

# Checking Unique Values in previous_cancellations column
hotel_booking_df['previous_cancellations'].unique()

# Checking Unique Values in previous_bookings_not_canceled column
hotel_booking_df['previous_bookings_not_canceled'].unique()

# Checking Unique Values in reserved_room_type column
hotel_booking_df['reserved_room_type'].unique()

# Checking Unique Values in assigned_room_type column
hotel_booking_df['assigned_room_type'].unique()

# Checking Unique Values in booking_changes column
hotel_booking_df['booking_changes'].unique()

# Checking Unique Values in deposit_type column
hotel_booking_df['deposit_type'].unique()

# Checking Unique Values in agent column
hotel_booking_df['agent'].unique()

# Checking Unique Values in company column
hotel_booking_df['company'].unique()

# Checking Unique Values in days_in_waiting_list column
hotel_booking_df['days_in_waiting_list'].unique()

# Checking Unique Values in customer_type column
hotel_booking_df['customer_type'].unique()

# Checking Unique Values in adr column
hotel_booking_df['adr'].unique()

# Checking Unique Values in required_car_parking_spaces column
hotel_booking_df['required_car_parking_spaces'].unique()

# Checking Unique Values in total_of_special_requests column
hotel_booking_df['total_of_special_requests'].unique()

# Checking Unique Values in reservation_status column
hotel_booking_df['reservation_status'].unique()

# Checking Unique Values in reservation_status_date column
hotel_booking_df['reservation_status_date'].unique()

"""## 3. ***Data Wrangling***

### Data Wrangling Code
"""

# Write your code to make your dataset analysis ready.
# Missing Values/Null Values in Columns

hotel_booking_df.isnull().sum().sort_values(ascending = False)[:6]

# Replacing null values of company, agent and children columns with 0 and country column with 'others'

hotel_booking_df[['company','agent','children']] = hotel_booking_df[['company','agent','children']].fillna(0)
hotel_booking_df[['country']] = hotel_booking_df[['country']].fillna('others')

# Checking if all null values are removed
hotel_booking_df.isnull().sum().sort_values(ascending = False)[:6]

# Checking number of duplicate values in the dataset
len(hotel_booking_df[hotel_booking_df.duplicated()])

# Thus, this dataset contains duplicate values

# Dropping the duplicate rows from dataset
hotel_booking_df = hotel_booking_df.drop_duplicates()

# Checking the shape of dataset after dropping duplicate values
hotel_booking_df.shape

# Checking the shape of dataset whose combining values of adults, babies and children columns is 0
hotel_booking_df[hotel_booking_df['adults']+hotel_booking_df['babies']+hotel_booking_df['children'] == 0].shape

# Dropping the rows where combining values of adults, babies and children columns is 0, because it simply means no bookings were made
hotel_booking_df.drop(hotel_booking_df[hotel_booking_df['adults']+hotel_booking_df['babies']+hotel_booking_df['children'] == 0].index, inplace = True)

"""### **Converting columns to appropriate datatypes**"""

# Changing datatype of column 'reservation_status_date' from object to data_type
hotel_booking_df['reservation_status_date'] = pd.to_datetime(hotel_booking_df['reservation_status_date'], format = '%Y-%m-%d')

"""### **Adding important columns as per requirement**"""

# Adding total staying days in hotels
hotel_booking_df['total_stay'] = hotel_booking_df['stays_in_weekend_nights']+hotel_booking_df['stays_in_week_nights']

# Adding total people number as column, i.e. total types of person = num of adults + children + babies
hotel_booking_df['total_people'] = hotel_booking_df['adults']+hotel_booking_df['babies']+hotel_booking_df['children']

# Checking the final number of rows and columns
hotel_booking_df.shape

"""### What all manipulations have you done and insights you found?

I have done the following manipulations and the insights were found, are as follows:-


*   I found that there were four columns containing null values. So we had Null values in columns- Company, Agent, Country and Children.

  1.   For company and agent, i have filled the missing values with 0

  2.   For country column, i have fill missing values with object 'Others'(Assuming while collecting data country was not found so user selected the 'Others' option.)

  3.   As the count of missing values in Children Column was only 4, so it was replaced with 0 considering no children.


*   This dataset was also containing duplicate values, so duplicate values was dropped.

*   I found that there were some rows in which the combining values of adults, babies and childrens was 0, so this simply means there were no guests as 0 indicates presence of none. So, there were no bookings made. As a result, i simply dropped the rows where combining values of adults, babies and children columns was 0.

*   The data type of 'reservation_status_date' column was object type, so it was changed to date type format for better use.

*   There were two new columns that was added, one is 'total_people' and other is 'total_stay'.

## ***4. Data Vizualization, Storytelling & Experimenting with charts : Understand the relationships between variables***

#### Chart - 1 - Pie Chart for most preferred hotel (Univariate)
"""

# Chart - 1 visualization code

# Visualizing by pie chart
hotel_booking_df['hotel'].value_counts().plot.pie(explode=[0.05, 0.05], autopct ='%1.1f%%', shadow = True, figsize =(10,9), fontsize = 20)

# Set labels
plt.title('Pie Chart for Most Preferred Hotel', fontsize = 20)

# To show
plt.show()

"""##### 1. Why did you pick the specific chart?

A pie chart expresses a part-to-whole relationship in your data. It's easy to explain the percentage comparison through area covered in a circle with different colors. Wherever different percentage comparison comes into action, pie chart is used frequently. So, i have used Pie Chart and which helped us to get the percentage comparison more clearly and precisely.

##### 2. What is/are the insight(s) found from the chart?

From the above chart, we got to know that City Hotel is most preferred hotel by the guests. Thus City Hotel has maximum bookings. 61.1% guests are preferred City Hotel, while only 38.9% guests have shown interest in Resort Hotel.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes, for both types of Hotels, this graph and data will make some positive business impacts.

City Hotel are doing well so they are providing more services to attract more guests to increase more revenue. But, in case of Resort Hotel, guests have shown less interest than City Hotel. So, Resort Hotel need to find solution to attract guests and find what City Hotel have done to attract guests. So, there is an scope of tremendous growth in Resort Hotel, if they upgrade their services and adopt the path of growth and success learning from the success strategies of City Hotels and adding new ideas of themselves.

#### Chart - 2 - Hotel type with highest adr (Bivariate with Categorical - Numerical)
"""

# Chart - 2 visualization code

# Group by Hotel
group_by_hotel = hotel_booking_df.groupby('hotel')

# Grouping by Hotel adr
highest_adr = group_by_hotel['adr'].mean().reset_index()

# Set plot size
plt.figure(figsize = (10,8))

# Create the figure object
ax = sns.barplot(x= highest_adr['hotel'], y= highest_adr['adr'])

# Set labels
ax.set_xlabel("Hotel type", fontsize = 20)
ax.set_ylabel("ADR", fontsize = 20)
ax.set_xticklabels(['City Hotel', 'Resort Hotel'], fontsize = 16)
ax.set_title('Average ADR of each Hotel type', fontsize = 20)

# To show
plt.show(ax)

"""##### 1. Why did you pick the specific chart?

Bar charts show the frequency counts of values for the different levels of a categorical or nominal variable. Sometimes, bar charts show other statistics such as percentages.

To show the average adr of each hotel type in a clear and feasible way, i have used Bar chart here.

##### 2. What is/are the insight(s) found from the chart?

City hotel has the highest ADR. This means City Hotels are generating more revenues than the Resort Hotels. More the ADR, more will be the revenue.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

So, City Hotel can do more advertising to get more customers that will ultimately add up to their revenue. Thus, the City Hotels are already enjoying high ADR, but a bit more of positive efforts towards growth will definitely adds a lot to their growth and overall revenue.

#### Chart - 3 - Relationship between ADR and Total Stay (Bivariate with Numerical-Numerical)
"""

# Chart - 3 visualization code
# Groupby adr, total_stay, hotel
adr_vs_total_stay = hotel_booking_df.groupby(['total_stay','adr','hotel']).agg('count').reset_index()
adr_vs_total_stay = adr_vs_total_stay.iloc[:, :3]
adr_vs_total_stay = adr_vs_total_stay.rename(columns = {'is_canceled':'number_of_stays'})
adr_vs_total_stay = adr_vs_total_stay[:18000]
adr_vs_total_stay

# Plotting the graph in line chart
# Set plot size
plt.figure(figsize=(12,6))

# Create the figure object
sns.lineplot(x= 'total_stay', y= 'adr', data= adr_vs_total_stay)

# Set labels
plt.xlabel('Total Stay', fontsize = 16)
plt.ylabel('ADR', fontsize = 16)
plt.title('Relationship between ADR and Total Stay', fontsize = 20)

# To show
plt.show()

"""##### 1. Why did you pick the specific chart?

This is a line chart and it helps to show small shifts that may be getting hard to spot in other graphs. It helps show trends for different periods. They are easy to understand. So, here we can easily track the ups and downs of the graph very precisely.

##### 2. What is/are the insight(s) found from the chart?

From this line chart, we have found that as the total stay increases the ADR is also getting high. So, ADR is directly proportional to total stay.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

The hotels should focus on increasing their ADR and the more advertisement and better facilities and good offers will let the guests to stay more, that will directly result in increasing ADR. So, Hotels should offer more attractive offers and facilities, so that total stay can be increased that will directly multiply their ADR and ultimately revenue will increase.

#### Chart - 4 - Percentage of repeated guests (Univariate)
"""

# Chart - 4 visualization code

# Visualizing by pie chart
hotel_booking_df['is_repeated_guest'].value_counts().plot.pie(explode=[0.05, 0.05], autopct ='%1.1f%%', shadow = True, figsize =(10,9), fontsize = 20)

# Set labels
plt.title('Percentage (%) of repeated guests', fontsize = 20)

# To show
plt.show()

"""##### 1. Why did you pick the specific chart?

Pie charts are used to represent the data or relative data in a single chart. The concept of pie slices is used to show the percentage of a particular data from the whole pie. Thus, i have used to show the percentage of repeated guests or not (where 0 is not repeated guest and 1 is repeated guest) through pie chart with different colored area under a circle.

##### 2. What is/are the insight(s) found from the chart?

Repeated guests are very few which is only 3.9% while 96.1% guests are not returning to the same hotel. So, it's a matter of deep thinking and taking proper steps to increase the repeated guests numbers for both type of hotels. In order to retained the guests management should take feedbacks from guests and try to improve the services.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes, the proportion of repeated guests is very much low, so if the Hotels work well in this side also, then the increase in number of repeated guests will ultimately boost their revenue. So Hotels can give alluring offers to non-repetitive customers during off seasons to enhance revenue. So, right steps should be taken like taking feedbacks, solving problems of customers within time limit and offering best offers to the customers.

#### Chart - 5 - Percentage distribution of required car parking spaces (Univariate)
"""

# Chart - 5 visualization code

# Visualizing by pie chart
hotel_booking_df['required_car_parking_spaces'].value_counts().plot.pie(explode=[0.05]*5, autopct ='%1.1f%%', shadow = False, figsize =(12,8), fontsize = 20, labels = None)

# Create the figure object
labels = hotel_booking_df['required_car_parking_spaces'].value_counts().index

# Set labels
plt.title('% Distribution of\nrequired car parking spaces', fontsize = 20)
plt.legend(bbox_to_anchor = (0.85, 1), loc = 'upper left', labels = labels)

# To show
plt.show()

"""##### 1. Why did you pick the specific chart?

I have used pie chart here because it gives the output in a more understanding manner as here we can clearly see the different two colors reflecting the demand of car parking spaces by guests. So, it's a very useful chart to get proper insights as we can use other charts also but i have found it more relevent here.

##### 2. What is/are the insight(s) found from the chart?

This chart shows that 91.6% guests did not required the parking space. Only 8.3% guests required the parking space.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes, the insights gained from here definitely help the hotels to provide better services. It can be said that hotels need to work less on car parking spaces as only 1 car parking space was required by 8.3% of guests. SO, it's better to focus on other areas to increase quality of hotel rather than focusing mainly on car parking area only. The demand for car parking area is less. This might be due to the reason as many guests prefers to use public vehicles for travel.

#### Chart - 6 - Meal type Distribution (Univariate)
"""

# Chart - 6 visualization code
# Set plot size
plt.figure(figsize=(10,6))

# Create the figure object
sns.countplot(x = hotel_booking_df['meal'])

# Set labels
plt.xlabel('Meal Type', fontsize = 16)
plt.ylabel('Count', fontsize = 16)
plt.title('Preferred Meal Type', fontsize = 20)

# To show
plt.show()

"""##### 1. Why did you pick the specific chart?

I have used the count plot here, because it shows the counts of observations in each categorical bin using bars. Bar plots look similar to count plots. But instead of the count of observations in each category, they show the mean of a quantitative variable among observations in each category. So, to get clear insights about the counts of different types of meal, i have used this count plot.

##### 2. What is/are the insight(s) found from the chart?

The insights that i have found from the above graph is that the most preferred meal type by the guests is BB (Bed and Breakfast) while HB (Half Board) and SC (Self Catering) are equally preferred. Types of meal in hotels are as follows:-

*   BB - (Bed and Breakfast)

*   HB - (Half Board)

*   FB - (Full Board)

*   SC - (Self Catering)

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

So, the insights here also have positive impact as hotels need to focus more on the BB meal type so that the majority of customers are satisfied while others types of meals should be given equal importance with proper management of food services so as to offer best services to customers.

#### Chart - 7 -
####Bar plot for Relationship of Distribution channel and ADR
"""

# Visualizing with the help of bar plot for checking relationship between ADR and distribution channel
# Using group by on distribution channel and hotel
distribution_channel_df = hotel_booking_df.groupby(['distribution_channel', 'hotel'])['adr'].mean().reset_index()

# Set plot size
plt.figure(figsize = (12,6))

# Plotting the bar chart
sns.barplot(x = 'distribution_channel', y = 'adr', data = distribution_channel_df, hue = 'hotel')

# Set labels
plt.xlabel("Distribution Channel", fontsize = 16)
plt.ylabel("ADR", fontsize = 16)
plt.title('ADR across Distribution Channel', fontsize = 20)

# To show
plt.show()

"""##### 1. Why did you pick the specific chart?

In the first visualization here i have used the pie chart to get clear understanding of mostly used booking distribution channel with occupancy percentage of each booking channel. A pie chart expresses a part-to-whole relationship in the data. It's easy to explain the percentage comparison through area covered in a circle with different colors. Where different percentage comparison comes into action, pie chart is used frequently. So, i have used Pie chart and which helped me to get the percentage comparison of the dependent variable.

While in 2nd visualization, Bar charts are used. Bar charts show the frequency counts of values for the different levels of a categorical or nominal variable. Sometimes, bar charts show other statistics, such as percentages. To show the mean of ADR with respect to the type of distribution channel, i have used Bar chart. So, this graph will help us to know about various distribution channel and their contribution to ADR in order to increase the income and revenue.

##### 2. What is/are the insight(s) found from the chart?

From the above 1st chart, i have found that 'TA/TO' has been mostly (79.1%) used for booking hotels. Direct market segment of 14.9%, Corporates market segment of 5.8%, GDS market segment of only 0.2% and rest unidentified are 0%

From the above 2nd chart it is clear that 'Direct' and 'TA/TO' have almost equally contribution in ADR in both type of hotels i.e. 'City Hotel' and 'Resort Hotel'. While, GDS has highly contributed in ADR in 'City Hotel' type. GDS needs to increase Resort Hotel bookings. Corporate - These are corporate hotel booking companies which makes bookings possible. The definitions of abbreviations used in this graph are as follows:-

*   GDS- A GDS is a worldwide contact between travel bookers and suppliers, such as hotels and other accommodation providers. It communicates live product, price and availability data to travel agents and online booking engines, and allows for automated transactions.

*   Direct- means that bookings are directly made with the respective hotels.

*   TA/TO- means that bookings are made through travel agents and travel operators.

*   Undefined- Bookings are undefined. It may be the reason that customers made their bookings on arrival.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

So, from the 1st graph, we have got the insights that 'TA/TO' is the leading one while Direct and Corporates have the potential to grow as they occupy much less space than the leading one. So, a good understanding and relation of Hotels with 'TA/TO' will definitely add up to the growth and revenue.

Yes, the gained insights from 2nd visualization will definitely help different distribution channels to work on the spaces where they are lacking behind like GDS is lacking behind in the bookings of Resort hotel. GDS is dominating in terms of ADR in case of City hotels but lacking behind in the category of Resort hotel. So, just taking proper steps in the right direction will help to increase the overall revenue.

#### Chart - 8 - Bookings by Month and Optimal Stay Length in Hotels
"""

# Chart - 8 visualization code

# Using groupby on arrival_date_month and taking the hotel count
bookings_by_months_df = hotel_booking_df.groupby(['arrival_date_month'])['hotel'].count().reset_index().rename(columns = {'hotel':'Counts'})

# Creating list of months in order
months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']

# Creating dataframe which will map the order of above months list without changing its values
bookings_by_months_df['arrival_date_month'] = pd.Categorical(bookings_by_months_df['arrival_date_month'], categories = months, ordered = True)

# Sorting by arrival_date_month
bookings_by_months_df = bookings_by_months_df.sort_values('arrival_date_month')

bookings_by_months_df

# Visualizing with the help of line plot

# Set plot size
plt.figure(figsize = (14,6))

# Plotting lineplot on x- months & y- bookings counts
sns.lineplot(x = bookings_by_months_df['arrival_date_month'], y = bookings_by_months_df['Counts'])

# Set title
plt.title('Number of bookings across each month', fontsize = 20)

# Set labels
plt.xlabel('Month', fontsize = 16)
plt.ylabel('Number of bookings', fontsize = 16)

# To show
plt.show()

# Visualizing with the help of bar plot

# Using groupby function on total stay and hotel
stay = hotel_booking_df.groupby(['total_stay', 'hotel']).agg('count').reset_index()

# Taking only first three columns
stay = stay.iloc[:, :3]

# Renaming the columns
stay = stay.rename(columns = {'is_canceled':'Number of stays'})

# Set plot size
plt.figure(figsize = (16,8))

# Plotting barchart
sns.barplot(x = 'total_stay', y = 'Number of stays', hue = 'hotel', data = stay)

# Set labels
plt.title('Optimal Stay Length in Both Hotel types', fontsize = 20)
plt.ylabel('Count of Stays', fontsize = 16)
plt.xlabel('Total Stays(Days)', fontsize = 16)

# To show
plt.show()

"""##### 1. Why did you pick the specific chart?

For 1st chart, i have picked the line chart here because it helps to show small shifts that may be getting hard to spot in other graphs. It helps show trends for different periods. They are easy to understand. So, here we can easily track the change of 'number of bookings' with respect to month.

While in 2nd chart here, bar plot has been used. I have used this chart to get clear view in understanding the relation between total stay in terms of days and count of stays(means total number of customers stayed)

##### 2. What is/are the insight(s) found from the chart?

From this graph of 1st chart, i have found that July and August months had the most Bookings. As, July and August generally surrounds in and near the summer vacation. So, summer vacation can be the reason for the bookings.

While, 2nd chart gives us different insights. So, from the above observations, we have found that the Optimal stay in both the type hotel is less than 7 days. So, after that staying numbers have declined drastically.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes from the 1st chart, it is clear that this provides a good insights that hotels should be well prepared for the month of July and August as maximum bookings takes place for this month. So, better the preparation and good approach will definitely adds to the growth of Hotels.

While in 2nd chart also have positive impact. Yes, from the insights gathered here, hotels can work in the domain to increase the staying length of customers to increase their revenue. The other understanding is that customers usually prefers a one week stay in a hotel. So, hotels need to work efficiently in these seven days so that customers would return to the same hotel again so this will increase the revenue.

#### Chart - 9 - Plotting Histogram
"""

# Chart - 9 visualization code
# Visualizing with the help of histogram plot for the entire dataset
# Set the plot size
hotel_booking_df.hist(figsize = (23,18))

# To show
plt.show()

"""##### 1. Why did you pick the specific chart?

To understand the data in a clear way with proper insights. I have used the histogram here. The histogram is a popular graphing tool. It is used to summarize discrete or continuous data that are measured on a interval scale. It is often used to illustrate the major features of the distribution of the data in a convenient form. It is also useful when dealing with large data sets (greater than 100 observations). It can help detect any unusual observations (outliers) or any gaps in the data. Thus, i have used the histogram plot to analysis the variable distributions over the whole dataset whether it's symmetric or not.

##### 2. What is/are the insight(s) found from the chart?

Some insights found from the chart are as follows:-

*   We can see that the maximum guest came in the year 2016.

*   Maximum arrival week number is 30.

*   Maximum arrival happens in the last of the month.

*   Maximum guests comes with no children.

*   There is very less requirement of Car parking spaces.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Just a histogram cannot define business impact. It's done just to see the distribution of the column data over the dataset.

#### Chart - 10 - Year and Hotel wise confirmed bookings and cancellation distribution
"""

# Chart - 10 visualization code

# Finding out the percentage and counts of confirmed and canceled bookings
# Plotting a Count Plot chart using seaborn for counts of confirmed and canceled bookings

# Set plot size
plt.figure(figsize = (10,6))

# Create the figure object
sns.countplot(x = 'hotel', hue = 'is_canceled', palette = 'Set2', data = hotel_booking_df)

# Set legends
plt.legend(['Confirmed', 'Canceled'])

# Set labels
plt.title('Hotel wise confirmation and cancelation of the bookings', fontsize = 20)
plt.ylabel('Count of\nconfirmation and cancelation', fontsize = 16)
plt.xlabel('Hotel Type', fontsize = 16)

# To show
plt.show()

# Plotting a Pie chart using matplotlib for percentage of confirmed and canceled bookings of Resort Hotel
resort_hotel = hotel_booking_df.loc[(hotel_booking_df['hotel'] == 'Resort Hotel')]
resort_hotel_checking_cancel = resort_hotel['is_canceled'].value_counts()

# Set labels
mylabels = ['Confirmed', 'Canceled']

# Set figure size
myexplode = [0.2, 0]

# Create the figure object
resort_hotel_cancelation = plt.pie(resort_hotel_checking_cancel, labels = mylabels, explode = myexplode, autopct = '%1.1f%%')

# Set title
plt.title('Resort Hotel\nConfirmed and Cancelation')

resort_hotel_checking_cancel

# Removing the canceled bookings from the data and creating a new dataframe
data_not_canceled = hotel_booking_df[hotel_booking_df['is_canceled'] == 0]

# Year wise Bookings of hotels
# Set style
sns.set_style(style = 'darkgrid')

# Set plot size
plt.figure(figsize = (12,6))

# Create the figure object
sns.countplot(x= 'arrival_date_year', hue= 'hotel', palette = 'tab10', data = data_not_canceled)

# Set legends
plt.legend(['Resort Hotel', 'City Hotel'])

# Set labels
plt.title('Year wise bookings of hotels', fontsize = 20)
plt.ylabel('Number of bookings', fontsize = 16)
plt.xlabel('Year', fontsize = 16)

# To show
plt.show()

"""##### 1. Why did you pick the specific chart?

I have picked out the count plot and pie plot lot to get proper insights on Hotel wise cancelation and confirmation of bookings.

##### 2. What is/are the insight(s) found from the chart?

We can clearly deduce from the above graphs that the City hotel is having greater number of bookings as compared to Resort hotel. But, the cancelation percentage is high of the City Hotel.

From the above graphs, it can be summarised that in the year 2016 both the hotel saw a massive increase in their bookings and by far the year 2016 is the year of the highest bookings of both hotel. In 2016 and 2017 the City hotel is having the highest number of bookings but in 2015 the Resort hotel is having the highest number of bookings.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Overall the graphs show a positive outcome but the visualization of cancelation graph creates a situation of deep concern. So, here as we can see, that more than 1/4th of overall booking got canceled.  So, it's a matter of deep concern. Thus, we need to look over this problem. The solution to this problem is that, we can check the reasons of cancelation of a booking & need to get this sorted out as soon as possible at the business level to stop the problems getting broader.

#### Chart - 11 - ADR across different months
"""

# Chart - 11 visualization code

# Using groupby funtion
bookings_by_months_df = hotel_booking_df.groupby(['arrival_date_month', 'hotel'])['adr'].mean().reset_index()

# Create month list
months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']

# It will take the order of the month list in the dataframe along with values
bookings_by_months_df['arrival_date_month'] = pd.Categorical(bookings_by_months_df['arrival_date_month'], categories = months, ordered = True)

# Sorting values
bookings_by_months_df = bookings_by_months_df.sort_values('arrival_date_month')

bookings_by_months_df

# Visualizing with the help of line plot

# Set plot size
plt.figure(figsize = (14,6))

# Create the figure object and plotting the line
sns.lineplot(x = bookings_by_months_df['arrival_date_month'], y = bookings_by_months_df['adr'], hue = bookings_by_months_df['hotel'])

# Set labels
plt.title('ADR across Each Month', fontsize = 20)
plt.xlabel('Month', fontsize = 16)
plt.ylabel('ADR', fontsize = 16)

# To show
plt.show()

"""##### 1. Why did you pick the specific chart?

I have picked the line chart here to get the clear insights of ADR by City and Resort hotels across each month. Line chart is very useful because it helps to show small shifts that may be getting hard to spot in other graphs. It helps show trends for different periods. They are easy to understand. To compare data, more than one line can be plotted on the same axis.

##### 2. What is/are the insight(s) found from the chart?

The insights found from the chart are as follows:-

*   For Resort Hotel, ADR is high in the months of June, July, August as compared to City Hotels. The reason may be that customers/people want to spent their summer vacation in Resort Hotels.

*   The best time for guests to visit Resort or City Hotels is January, February, March, April, October, November and December as the average daily rate in this month is very low. So, it would be feasible and sustainable.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

So, the higher the ADR, the higher will be the revenue, so its a good sign. Hotels should work more to enhance their ADR by offering good schemes to attract customers in winter vacation also and other holidays.

#### Chart - 12 - Weekly stay distribution and Calculation of Cancelation and non-cancelation
"""

# Chart - 12 visualization code
# As i have already created a column 'total_stay' above i.e.
# Adding total staying days in hotels
hotel_booking_df['total_stay'] = hotel_booking_df['stays_in_weekend_nights'] + hotel_booking_df['stays_in_week_nights']

# Set the plot size
plt.figure(figsize=(14,7))

# Using a violin plot to know in which weeks, visitors stays the most
sns.violinplot(x = 'arrival_date_week_number', y = 'total_stay', palette = 'Set2', data = hotel_booking_df)

# Set labels
plt.title('Week wise number of stays', fontsize = 20)
plt.ylabel('Number of stays', fontsize = 16)
plt.xlabel('Week number', fontsize = 16)

# To show
plt.show()

# Visualizing with the help of pie plot
hotel_booking_df['is_canceled'].value_counts().plot.pie(explode = [0.05,0.05], autopct = '%1.1f%%', shadow = True, figsize = (10,8), fontsize = 20)

# Set title
plt.title('Cancelation and Non-Cancelation', fontsize = 20)

# To show
plt.show()

"""##### 1. Why did you pick the specific chart?

I have used the violin plot here, to gather proper relation between number of stays and week wise number of stays and violin plots are used when one want to observe the distribution of numetic data, and are especially useful when you want to make a comparison of distributions between multiple groups. This peaks, valleys, and tails of each group's density curve can be compared to see where groups are similar or different.

I have picked this pie plot as it's look very precise and clear to get the insights between two variables. As, we can see now 27.5% tickets was canceled. Here, 0 denotes not canceled and 1 denotes the canceled one. So, i have used the pie plot because it represents data visually as a fractional part of a whole, which can be an effective communication tool for the even uninformed audience. It enables the audience to see a data comparison at a glance to make an immediate analysis or to understand information quickly.

##### 2. What is/are the insight(s) found from the chart?

From the above violin plot, we have found that from the week 28 to 31, it has shown the highest days of stay whereas from the week 1 to 11 has shown a very steady trend in the number of stays and also the week 18 to 22 has shown the least number of stays by the visitors in aggregate of all 3 years 2015, 2016 and 2017.

From the graph, we have found the insights that more than 1/4th of the overall bookings i.e. approx 27.5% of the tickets was got canceled.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes, according to the outcomes, Client can have a better plan to provide better services to the guests so that the revenue can be multiplied.

So, here as we can see, that more than 27% booking got canceled. So, it's a matter of deep concern. Thus, we need to look over this problem. The solution to this problem is that, we can check the reasons of cancelation of a booking & need to get this sorted out as soon as possible at the business level to stop the problems getting broader.

#### Chart - 13 - Room type preference and Customer types
"""

# Chart - 13 visualization code

# Set the plot size
plt.figure(figsize = (14,6))

# Create the figure object
sns.countplot(x = hotel_booking_df['assigned_room_type'], order = hotel_booking_df['assigned_room_type'].value_counts().index)

# Set labels
plt.xlabel('Room Type', fontsize = 16)
plt.ylabel('Count of Room type', fontsize = 16)
plt.title('Most preferred Room Type', fontsize = 20)

# To show
plt.show()

# Using seeborn to plot a count plot chart to demonstrate the types of customer visit the most
# Set the plot size
plt.figure(figsize = (12,6))

# Create the figure object
sns.countplot(x = 'arrival_date_month', hue = 'customer_type', palette = 'Set2', data = hotel_booking_df)

# Set labels
plt.xlabel('Months', fontsize = 16)
plt.ylabel('Number of customers', fontsize = 16)
plt.title('Types of customer arrived month wise', fontsize = 20)

# To show
plt.show()

"""##### 1. Why did you pick the specific chart?

For 1st visualization, i have picked the bar chart to display result for this set of code. Here, i have used bar graph to show distribution by volume(count of room), which type of room is alotted. Bar graph summarises the large set of data in simple visual form. It displays each category of data in the frequency distribution. It clarifies the trend of data better than the table. So, i have used the bar graph here.

While 2nd visualization involves a count plot because it helps us to get clear insights with the total number of guests visited. So, i have used count plot here to know about the type of guests.

##### 2. What is/are the insight(s) found from the chart?

From the above chart, it is found that the most preferred Room type is 'A'. So, majority of the guests have shown interest in this room type. So, overall this chart shows room type 'A' is most preferred by guests.

From the 2nd graph, it can be summarised that the Transient type of customers visit the most whereas the visitors who are in group comes in the category of least visitors.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes, from the graph it can be seen that there are positive impacts because 'A', 'D', 'E' is more preferred by guest due to better services offered in room type. So, overall booking in a hotel matters. So, each room type belongs to each hotel so wherever customers goes, the hotel will be benefit but Hotels should also look in the factors affecting less preference in some particular room type. So, overall if other room types will also gain popularity then again hotel will be benefitted. So, ultimately hotels will encounters more bookings resulting in much more revenues.

Ofcourse the better understanding regarding the different type of guests will help to take proper right steps towards services, facilities, requirements and offers which will directly result in the growth in business.

#### Chart - 14 - Correlation Heatmap
"""

# Correlation Heatmap visualization code
# Set the plot size
plt.figure(figsize = (18,10))

# Create the figure object
sns.heatmap(hotel_booking_df.corr(), annot = True, fmt='.2f')

# Set title
plt.title('Co-relation of the columns', fontsize = 20)

# To show
plt.show()

"""##### 1. Why did you pick the specific chart?

A correlation matrix is a table showing correlation coefficients between variables. Each cell in the table shows the co-relation between two variables. A correlation matrix is used to summarize data, as an input into a more advanced analysis and as a diagnostic for advanced analysis. The range of correlation is [-1,1].

Thus to know the co-relation between all the variables along with the correlation coefficients, i have used correlation heatmap.

##### 2. What is/are the insight(s) found from the chart?

The insights found from the above chart are as follows:-

*   is_canceled and total_stay are negatively correlated. This means customers are unlikely to cancel their bookings if they don't get the same room as per reserved room. We have visualized it above.

*   lead_time and total_stay is positively correlated. This means more the stay of customer is, more will be the lead time.

*   adults, childrens and babies are correlated to each other. This indicates more the people, more will be ADR.

*   is_repeated guest and previous bookings not canceled have a strong correlation. This may be due to the reason that repeated guests are not more interested to cancel their bookings.

*   So, these are some powerful insights found from the chart of correlation heatmap.

#### Chart - 15 - Pair Plot
"""

# Pair Plot visualization code
sns.pairplot(hotel_booking_df, hue = 'is_repeated_guest')

# To show
plt.show()

"""##### 1. Why did you pick the specific chart?

Pair plot is used to understand the best set of features to explain a relationship between two variables or to form the most separated clusters. It also helps to form some simple classification models by drawing some simple lines or make linear separation in our data-set.

Thus, i have used pair plot to analyse the patterns of data and relationship between the features. It's exactly same as the correlation map but here it shows the output in the graphical representation.

##### 2. What is/are the insight(s) found from the chart?

We have found the relationship of 'is_repeated_guest' with different types of columns. So, generally this chart reflects the relationship of a particular column with all other columns.

## **5. Solution to Business Objective**

#### What do you suggest the client to achieve Business Objective ?
Explain Briefly.

**Business objective attained as follows:**

1. To attain high growth and more success, hotel business need to flourish and for that few things which we need to consider is high revenue generation, customers satisfaction and employeee retention.

2. We are able achieve the same by showing the client which are the months which are high in revenue generation by using various charts and graphs distribution.

3. Enhancing the revenue adopted by bar chart distribution of which type room are most preferred and reserved and which are the months suitable for visitors.

4. We also have founded the various preferences in different categories like most liked meal type, optimal stay length, facilities required by customers like car parking spaces, etc. So, all these insights ultimately add to have a better planning for growth and higher revenue.

5. So, preparing well by using and understanding these useful outcomes, the client can be well prepare in advance so that minimum grievances would be faced by clients in long run and would help in further enhancement of their hospitality and service.

6. Ask for feedback often from the guests visiting the hotels so that the quality can be upgraded to the next level to increase more guests.

7. Periodically throw offers to attract the old customers so as to increase the number of repeated guests.

# **Conclusion**

*   City hotels are the most preferred hotel type by the guests. So, we can say that City hotels are the busiest hotel in comparison to the resort hotel.

*   The average ADR of city hotels is higher as compared to the resort hotels. So, it can be said that these City hotels are generating more revenue than the resort hotels.

*   The total stay of guests is directly proportional to the adr. So, higher the days of stay, the higher will be ADR and revenue as well.

*   The percentage of repeated guests is very low. Only 3.9% people had revisited the hotels. Rest 96.1% were new guests. So, retention rate is much low.

*   The percentage of required car parking spaces is very low. This means less car parking spaces don't affect the business much. Most of the customers (91.6%) do not require car parking spaces.

*   Among different types of meals, BB (Bed & Breakfast) is the most preferred type of meal by the guests. So, guests love to opt for this meal type.

*   'Direct' and 'TA/TO' have almost equally contribution in ADR in both type of hotels i.e. 'City Hotel' and 'Resort Hotel'. While, GDS has highly contributed in ADR in 'City Hotel' type.

*   Optimal stay length in both the hotel types (City and Resort Hotel) is less than 7 days. Usually people stay for a week. So, after 1 week, the optimal stay length declined drastically.

*   Most number of bookings have taken place in the month of July and August. July and August are the favourite months of guests to visit different places.

*   The mostly used distribution channel for booking is 'TA/TO'. 79.1% bookings were made through TA/TO (travel agents/ tour operators).

*   While calculating ADR across different month, it is found that for Resort hotel, ADR is high in the months of June, July, August as compared to City Hotels.

*   Almost 1/4th of the total bookings is canceled. Approx, 27.5% bookings have got canceled out of all the bookings.

*   Majority of the guests have shown interest in the room type 'A'. Room type 'A' is the most preferred room type.
"""